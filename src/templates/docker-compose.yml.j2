{%- import 'secrets.j2' as secrets with context -%}
---
version: "3"
networks:
  default:
  database:


services:
  #
  ## === DHCPD ===
  # DHCP Daemon: answer to dhcp requests to assign IPs to
  # clients and set their primary DNS server. This is necessary
  # for adGuardHome to work with zero configuration on clients.
  ##
  dhcpd:
    image: networkboot/dhcpd:1.3.0
    container_name: dhcpd
    volumes:
      - ./dhcpd/config/dhcpd.conf:/data/dhcpd.conf:ro
      - ./dhcpd/data:/data
      - ./dhcpd/cgroup:/sys/fs/cgroup
    hostname: dhcpd
    network_mode: host
    environment:
      - TZ={{ pinanas.timezone }}
    restart: unless-stopped


  #
  ## === TRAEFIK ===
  # Reverse proxy (HTTP, TCP, UDP): route requests to
  # services hosted or not on the same host. This is
  # useful to add SSO (authelia), HTTPS (let's encrypt),
  # and protect services not suited to face the outside.
  ##
  traefik:
    image: traefik:v2.9
    container_name: traefik
    depends_on:
      - dhcpd
    ports:
      - 80:80
      - 443:443
      - 53:53/udp
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik/config/config.yml:/config.yml:ro
      - ./traefik/config/traefik.yml:/traefik.yml:ro
      - ./traefik/data/acme.json:/acme.json
      - ./traefik/log:/opt/traefik
    hostname: traefik
    networks:
      default:
        aliases:
          - traefik
          - traefik-dashboard
    environment:
      - TZ={{ pinanas.timezone }}
{% for var in pinanas.network.dns.provider.api %}
      - {{ var.name }}={{ var.value }}
{% endfor %}
    labels:
      - "traefik.enable=true"
      - "traefik.http.middlewares.sslheader.headers.customrequestheaders.X-Forwarded-Proto=https"
      - "traefik.http.middlewares.traefik-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.traefik-secure.entrypoints=https"
      - "traefik.http.routers.traefik-secure.rule=Host(`traefik-dashboard.{{ pinanas.domain }}`)"
      - "traefik.http.routers.traefik-secure.service=api@internal"
      - "traefik.http.routers.traefik-secure.tls=true"
      - "traefik.http.routers.traefik-secure.tls.certresolver=myresolver"
      - "traefik.http.routers.traefik-secure.tls.domains[0].main={{ pinanas.domain }}"
      - "traefik.http.routers.traefik-secure.tls.domains[0].sans=*.{{ pinanas.domain }}"
      - "traefik.http.routers.traefik.entrypoints=http"
      - "traefik.http.routers.traefik.middlewares=traefik-https-redirect"
      - "traefik.http.routers.traefik.rule=Host(`traefik-dashboard.{{ pinanas.domain }}`)"
    healthcheck:
      test: traefik healthcheck --ping
    restart: unless-stopped


  #
  ## === AUTHELIA ===
  # Single Sign On: handle authentification to users
  # on the whole network.
  ##
  authelia:
    image: authelia/authelia:4.37
    container_name: authelia
    depends_on:
      - traefik
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./authelia/config:/config
    hostname: authelia
    networks:
      default:
        aliases:
          - authelia
          - auth
    environment:
      - TZ={{ pinanas.timezone }}
      - PUID={{ PUID }}
      - PGID={{ PGID }}
    labels:
      - "traefik.enable=true"
      {% set portnumber_=":" ~ pinanas.ports.https if pinanas.ports.https != 443 else "" -%}
      - "traefik.http.middlewares.authelia.forwardauth.address=http://authelia:9091/api/verify?rd=https://auth.{{ pinanas.domain }}{{ portnumber_ }}"
      - "traefik.http.middlewares.authelia.forwardauth.authResponseHeaders=Remote-User,Remote-Groups,Remote-Name,Remote-Email"
      - "traefik.http.middlewares.authelia.forwardauth.trustForwardHeader=true"
      - "traefik.http.routers.authelia.entrypoints=https"
      - "traefik.http.routers.authelia.rule=Host(`auth.{{ pinanas.domain }}`)"
      - "traefik.http.routers.authelia.tls=true"
    restart: unless-stopped


  #
  ## === AD GUARD HOME ===
  #
  # Ad filter: acts as a primary DNS and filter
  # hosts known to serve advertising.
  ##
  adguardhome:
    image: adguard/adguardhome
    container_name: adguardhome
    depends_on:
      - dhcpd
      - traefik
    volumes:
      - ./adguardhome/config:/opt/adguardhome/conf
      - ./adguardhome/data:/opt/adguardhome/work/data
    hostname: adguardhome
    networks:
      default:
        aliases:
          - adguardhome
          - dns
    environment:
      - TZ={{ pinanas.timezone }}
      - PUID={{ PUID }}
      - PGID={{ PGID }}
    labels:
      - "traefik.enable=true"
      - "traefik.http.middlewares.adguardhome-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.adguardhome-secure.entrypoints=https"
      - "traefik.http.routers.adguardhome-secure.middlewares=authelia@docker"
      - "traefik.http.routers.adguardhome-secure.rule=Host(`adguardhome-dashboard.{{ pinanas.domain }}`)"
      - "traefik.http.routers.adguardhome-secure.service=adguardhome"
      - "traefik.http.routers.adguardhome-secure.tls=true"
      - "traefik.http.routers.adguardhome.entrypoints=http"
      - "traefik.http.routers.adguardhome.middlewares=adguardhome-https-redirect"
      - "traefik.http.routers.adguardhome.rule=Host(`adguardhome-dashboard.{{ pinanas.domain }}`)"
      - "traefik.http.services.adguardhome.loadbalancer.server.port=80"
      - "traefik.tcp.routers.adblockhome-dns.entrypoints=dns-tcp"
      - "traefik.tcp.routers.adblockhome-dns.service=adblockhome-dns"
      - "traefik.tcp.services.adblockhome-dns.loadBalancer.server.port=53"
      - "traefik.udp.routers.adblockhome-dns.entrypoints=dns-udp"
      - "traefik.udp.routers.adblockhome-dns.service=adblockhome-dns"
      - "traefik.udp.services.adblockhome-dns.loadBalancer.server.port=53"
    restart: unless-stopped


  #
  ## === NETDATA ===
  #
  # Resource monitor.
  ##
  netdata:
    image: netdata/netdata:v1.36
    container_name: netdata
    depends_on:
      - dhcpd
    cap_add:
      - SYS_PTRACE
    security_opt:
      - apparmor:unconfined
    volumes:
      - /etc/passwd:/host/etc/passwd:ro
      - /etc/group:/host/etc/group:ro
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /etc/os-release:/host/etc/os-release:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /var/log/fail2ban.log:/var/log/fail2ban.log:ro
      - ./dhcpd/data:/var/lib/dhcp:ro
      - ./netdata/data:/etc/netdata
    hostname: netdata
    networks:
      default:
        aliases:
          - netdata
          - resources
    environment:
      - TZ={{ pinanas.timezone }}
      - PUID={{ PUID }}
      - PGID={{ PGID }}
    labels:
      - "traefik.enable=true"
      - "traefik.http.middlewares.netdata-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.netdata-secure.entrypoints=https"
      - "traefik.http.routers.netdata-secure.middlewares=authelia@docker"
      - "traefik.http.routers.netdata-secure.rule=Host(`resources.{{ pinanas.domain }}`)"
      - "traefik.http.routers.netdata-secure.service=netdata"
      - "traefik.http.routers.netdata-secure.tls=true"
      - "traefik.http.routers.netdata.entrypoints=http"
      - "traefik.http.routers.netdata.middlewares=netdata-https-redirect"
      - "traefik.http.routers.netdata.rule=Host(`resources.{{ pinanas.domain }}`)"
      - "traefik.http.services.netdata.loadbalancer.server.port=19999"
    restart: unless-stopped


  #
  ## === HEIMDALL ===
  #
  # Application dashboard
  ##
  heimdall:
    image: lscr.io/linuxserver/heimdall:2.4.13
    container_name: heimdall
    depends_on:
      - dhcpd
    networks:
      default:
        aliases:
          - heimdall
          - apps
    environment:
      - TZ={{ pinanas.timezone }}
      - PUID={{ PUID }}
      - PGID={{ PGID }}
    labels:
      - "traefik.enable=true"
      - "traefik.http.middlewares.heimdall-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.heimdall-secure.entrypoints=https"
      - "traefik.http.routers.heimdall-secure.middlewares=authelia@docker"
      - "traefik.http.routers.heimdall-secure.rule=Host(`apps.{{ pinanas.domain }}`)"
      - "traefik.http.routers.heimdall-secure.service=heimdall"
      - "traefik.http.routers.heimdall-secure.tls=true"
      - "traefik.http.routers.heimdall.entrypoints=http"
      - "traefik.http.routers.heimdall.middlewares=heimdall-https-redirect"
      - "traefik.http.routers.heimdall.rule=Host(`apps.{{ pinanas.domain }}`)"
      - "traefik.http.services.heimdall.loadbalancer.server.port=80"
    volumes:
      - ./heimdall/data:/config/www
    restart: unless-stopped


  #
  ## === NEXTCLOUD ===
  #
  # Nextcloud gives you access to all your files wherever you are.
  ##
  database:
    image: linuxserver/mariadb:10.5.13-alpine
    container_name: database
    depends_on:
      - dhcpd
    networks:
      database:
        aliases:
          - mariadb
          - mysql
          - database
          - sql
    environment:
      - TZ={{ pinanas.timezone }}
      - PUID={{ PUID }}
      - PGID={{ PGID }}
      - "MYSQL_ROOT_PASSWORD={{ secrets.make_secret('pinanas.database.root_password') }}"
      - MYSQL_USER=pinanas-nextcloud
      - "MYSQL_PASSWORD={{ secrets.make_secret('pinanas.nextcloud.database_password') }}"
      - MYSQL_DATABASE=pinanas-nextcloud
    volumes:
      - ./database/data/databases:/config/databases
      - ./database/data/log:/config/log
      - ./database/config:/config
    restart: unless-stopped

  nextcloud:
    build:
      context: nextcloud/build
    container_name: nextcloud
    depends_on:
      - dhcpd
      - database
    links:
      - database
    networks:
      default:
        aliases:
          - nextcloud
          - cloud
      database:
        aliases:
          - nextcloud
          - cloud
    environment:
      - TZ={{ pinanas.timezone }}
      - PUID={{ PUID }}
      - PGID={{ PGID }}
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=pinanas_default"
      - "traefik.http.routers.nextcloud-secure.entrypoints=https"
      - "traefik.http.routers.nextcloud-secure.middlewares=authelia@docker"
      - "traefik.http.routers.nextcloud-secure.rule=Host(`cloud.{{ pinanas.domain }}`)"
      - "traefik.http.routers.nextcloud-secure.service=nextcloud-secure"
      - "traefik.http.routers.nextcloud-secure.tls=true"
      - "traefik.http.routers.nextcloud.entrypoints=http"
      - "traefik.http.routers.nextcloud.rule=Host(`cloud.{{ pinanas.domain }}`)"
      - "traefik.http.routers.nextcloud.middlewares=nextcloud-https-redirect"
      - "traefik.http.middlewares.nextcloud-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.services.nextcloud-secure.loadbalancer.server.scheme=https"
      - "traefik.http.services.nextcloud-secure.loadbalancer.server.port=443"
      - "traefik.http.middlewares.hsts.headers.stsincludesubdomains=false"
      - "traefik.http.middlewares.hsts.headers.stspreload=true"
      - "traefik.http.middlewares.hsts.headers.stsseconds=31536000"
      - "traefik.http.routers.nextcloud-secure.middlewares=hsts"
    volumes:
      - ./nextcloud/data/crontabs:/config/crontabs
      - ./nextcloud/data/generated-config:/config/www/nextcloud/config
      - ./nextcloud/data/files:/data
    restart: unless-stopped

  #
  ## === FAIL2BAN ===
  #
  # Fail2ban ban hosts that cause multiple authentication errors
  ##
  fail2ban:
    image: lscr.io/linuxserver/fail2ban:0.11.2
    container_name: fail2ban
    depends_on:
      - traefik
    cap_add:
      - NET_ADMIN
      - NET_RAW
    network_mode: host
    environment:
      - TZ={{ pinanas.timezone }}
      - PUID={{ PUID }}
      - PGID={{ PGID }}
      - SSMTP_HOST={{ pinanas.network.smtp.host }}
      - SSMTP_PORT={{ pinanas.network.smtp.port }}
      - SSMTP_USER={{ pinanas.network.smtp.username }}
      - SSMTP_PASSWORD={{ pinanas.network.smtp.password }}
      - SSMTP_TLS=YES
      - SSMTP_STARTTLS=YES
    volumes:
      - ./fail2ban/config:/config/fail2ban
      - ./fail2ban:/config/log/fail2ban
      - /var/log:/var/log:ro
      - ./authelia/config/logs:/remotelogs/authelia:ro
      - ./nextcloud/data/files:/remotelogs/nextcloud:ro
      - ./traefik/log:/remotelogs/traefik:ro
    restart: unless-stopped

