#jinja2:lstrip_blocks: True
{%- import 'secrets.j2' as secrets with context -%}
---
#
## network
#
server:
  host: 0.0.0.0
  port: 9091
  buffers:
    read: 4096
    write: 4096
  path: ""


default_redirection_url: "https://apps.{{ pinanas.domain }}:{{ pinanas.ports.https }}/"

#
## system
#
log:
  level: info
  file_path: /config/logs/authelia.log
#
## userland
#
theme: dark

#
## security
#
access_control:
  default_policy: deny
  rules:
    #
    ## === ADMIN SERVICES ===
    #

    # AdGuardHome
    - domain: "adguardhome-dashboard.{{ pinanas.domain }}"
      policy: two_factor
      subject:
      - "group:admins"

    # Duplicati
    - domain: "backup.{{ pinanas.domain }}"
      policy: two_factor
      subject:
      - "group:admins"

    # Netdata
    - domain: "resources.{{ pinanas.domain }}"
      policy: one_factor
      subject:
      - "group:admins"

    #
    ## === USER SERVICES ===
    #
    # Heimdall
    - domain: "apps.{{ pinanas.domain }}"
      policy: one_factor
      subject:
      - "group:users"

    # Jellyfin
    - domain: "media.{{ pinanas.domain }}"
      policy: bypass

    # Nextcloud
    - domain: "cloud.{{ pinanas.domain }}"
      policy: bypass

    #
    ## === EXTERNAL SERVICES ===
    #
    {% if pinanas.services is defined %}
      {% for service in pinanas.services %}
    - domain: "{{ service.name }}.{{ pinanas.domain }}"
      policy: "{{ service.policy | default('two_factor') }}"
        {% if service.policy is not defined or service.policy != "bypass" %}
      subject:
          {% for group in service.groups | default(['admins']) %}
      - "group:{{ group }}"
          {% endfor %}
        {% endif %}
      {% endfor %}
    {% endif %}

jwt_secret: "{{ secrets.make_secret('pinanas.authelia.jwt_secret') }}"

totp:
  issuer: authelia.com
  period: 30
  skew: 1

authentication_backend:
  password_reset:
    disable: false
  refresh_interval: 5m
  file:
    path: /config/users_database.yml
    password:
      algorithm: argon2id
      iterations: 1
      key_length: 32
      salt_length: 16
      memory: 64
      parallelism: 8

session:
  name: authelia_session
  domain: {{ pinanas.domain }}
  same_site: lax
  secret: "{{ secrets.make_secret('pinanas.authelia.session.secret') }}"
  expiration: 2h
  inactivity: 15m
  remember_me_duration: 1M

regulation:
  max_retries: 5
  find_time: 2m
  ban_time: 5m

storage:
  encryption_key: "{{ secrets.make_secret('pinanas.authelia.storage.encryption_key') }}"
  local:
    path: /config/db.sqlite3

notifier:
  disable_startup_check: true
  smtp:
    username: "{{ pinanas.network.smtp.username }}"
    password: "{{ pinanas.network.smtp.password }}"
    sender: "{{ pinanas.network.smtp.sender }}"
    host: "{{ pinanas.network.smtp.host }}"
    port: "{{ pinanas.network.smtp.port }}"

identity_providers:
  oidc:
    hmac_secret: "{{ secrets.make_secret('pinanas.authelia.identity_providers.oidc.hmac_secret') }}"
    issuer_private_key: |
      {{ 'indent=6' | authelia_sshkey }}
    access_token_lifespan: 1h
    authorize_code_lifespan: 1m
    id_token_lifespan: 1h
    refresh_token_lifespan: 90m
    enable_client_debug_messages: false
    clients:
      - id: nextcloud
        description: Nextcloud
        secret: "{{ secrets.make_secret('pinanas.authelia.identity_providers.oidc.clients[nextcloud].secret')[:16] }}"
        authorization_policy: one_factor
        audience: []
        scopes:
          - openid
          - groups
          - email
          - profile
        redirect_uris:
          - "https://cloud.{{ pinanas.domain }}{{ ":" ~ pinanas.ports.https if pinanas.ports.https != 443 else "" }}/apps/user_oidc/code"
        grant_types:
          - refresh_token
          - authorization_code
        response_types:
          - code
        response_modes:
          - form_post
          - query
          - fragment
        userinfo_signing_algorithm: none
      - id: jellyfin
        description: Jellyfin
        secret: "{{ secrets.make_secret('pinanas.authelia.identity_providers.oidc.clients[jellyfin].secret') }}"
        authorization_policy: one_factor
        audience: []
        scopes:
          - openid
          - groups
          - email
          - profile
        redirect_uris:
          - "https://media.{{ pinanas.domain }}{{ ":" ~ pinanas.ports.https if pinanas.ports.https != 443 else "" }}/sso/OID/r/Authelia"
        grant_types:
          - refresh_token
          - authorization_code
        response_types:
          - code
        response_modes:
          - form_post
          - query
          - fragment
        userinfo_signing_algorithm: none
