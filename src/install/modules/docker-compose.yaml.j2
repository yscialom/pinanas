#jinja2: lstrip_blocks: True, keep_trailing_newline: True
{%- import 'secrets.j2' as secrets with context -%}
---
version: "3"
networks:
  pinanas:
  database:

services:

  ## === DHCPD ===
  dhcpd:
    image: networkboot/dhcpd:1.3.0
    container_name: dhcpd
    network_mode: host
    hostname: dhcpd
    environment:
      - TZ={{ pinanas.timezone }}
    volumes:
      - ./dhcpd/config/dhcpd.conf:/data/dhcpd.conf:ro
      - ./dhcpd/data:/data
      - ./dhcpd/cgroup:/sys/fs/cgroup
    restart: unless-stopped

  ## === FAIL2BAN ===
  fail2ban:
    image: lscr.io/linuxserver/fail2ban:1.0.2
    container_name: fail2ban
    depends_on:
      - traefik
    cap_add:
      - NET_ADMIN
      - NET_RAW
    network_mode: host
    hostname: fail2ban
    environment:
      - TZ={{ pinanas.timezone }}
      - PUID={{ PUID }}
      - PGID={{ PGID }}
      - SSMTP_HOST={{ pinanas.network.smtp.host }}
      - SSMTP_PORT={{ pinanas.network.smtp.port }}
      - SSMTP_USER={{ pinanas.network.smtp.username }}
      - SSMTP_PASSWORD={{ pinanas.network.smtp.password }}
      - SSMTP_TLS=YES
      - SSMTP_STARTTLS=YES
    volumes:
      - ./fail2ban/config:/config/fail2ban
      - ./logs/fail2ban:/fail2ban/fail2ban_log
      - ./logs:/fail2ban/remotelogs:ro
      - /var/log:/fail2ban/pinanas_logs:ro
    restart: unless-stopped

  ## === TRAEFIK ===
  traefik:
    image: traefik:v2.10
    container_name: traefik
    depends_on:
      - dhcpd
    ports:
      - {{ pinanas.ports.http }}:{{ pinanas.ports.http }}
      - {{ pinanas.ports.https }}:{{ pinanas.ports.https }}
      - 53:53/udp
    networks:
      pinanas:
        aliases:
          - traefik
          - traefik-dashboard
    environment:
      - TZ={{ pinanas.timezone }}
      {% for var in pinanas.network.dns.provider.api %}
      - {{ var.name }}={{ var.value }}
      {% endfor %}
    labels:
      - "traefik.enable=true"
      - "traefik.http.middlewares.sslheader.headers.customrequestheaders.X-Forwarded-Proto=https"
      - "traefik.http.middlewares.traefik-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.traefik-secure.entrypoints=https"
      - "traefik.http.routers.traefik-secure.rule=Host(`traefik-dashboard.{{ pinanas.domain }}`)"
      - "traefik.http.routers.traefik-secure.service=api@internal"
      - "traefik.http.routers.traefik-secure.tls=true"
      - "traefik.http.routers.traefik-secure.tls.certresolver=myresolver"
      - "traefik.http.routers.traefik-secure.tls.domains[0].main={{ pinanas.domain }}"
      - "traefik.http.routers.traefik-secure.tls.domains[0].sans=*.{{ pinanas.domain }}"
      - "traefik.http.routers.traefik.entrypoints=http"
      - "traefik.http.routers.traefik.middlewares=traefik-https-redirect"
      - "traefik.http.routers.traefik.rule=Host(`traefik-dashboard.{{ pinanas.domain }}`)"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik/config/config.yaml:/config.yaml:ro
      - ./traefik/config/traefik.yaml:/traefik.yaml:ro
      - ./traefik/data/acme.json:/acme.json
      - ./logs/traefik:/log
    healthcheck:
      test: traefik healthcheck --ping
    restart: unless-stopped

  ## === AUTHELIA ===
  authelia:
    image: authelia/authelia:4.37 {# Ideally, update src/install/installer/ansible_passwords.py with the same tag (version) #} 
    container_name: authelia
    depends_on:
      - traefik
    networks:
      pinanas:
        aliases:
          - authelia
          - auth
    environment:
      - TZ={{ pinanas.timezone }}
      - PUID={{ PUID }}
      - PGID={{ PGID }}
    labels:
      - "traefik.enable=true"
      {% set portnumber_=":" ~ pinanas.ports.https if pinanas.ports.https != 443 else "" %}
      - "traefik.http.middlewares.authelia.forwardauth.address=http://authelia:9091/api/verify?rd=https://auth.{{ pinanas.domain }}{{ portnumber_ }}"
      - "traefik.http.middlewares.authelia.forwardauth.authResponseHeaders=Remote-User,Remote-Groups,Remote-Name,Remote-Email"
      - "traefik.http.middlewares.authelia.forwardauth.trustForwardHeader=true"
      - "traefik.http.routers.authelia.entrypoints=https"
      - "traefik.http.routers.authelia.rule=Host(`auth.{{ pinanas.domain }}`)"
      - "traefik.http.routers.authelia.tls=true"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./authelia/config:/config
      - ./logs/authelia:/log
    restart: unless-stopped

  ## === LOGROTATE ===
  logrotate:
    image: blacklabelops/logrotate:1.3
    container_name: logrotate
    networks:
      pinanas:
        aliases:
          - logrotate
    environment:
      - TZ={{ pinanas.timezone }}
      - LOGS_DIRECTORIES=/var/log
      - LOGROTATE_INTERVAL=hourly
      - LOGROTATE_COPIES=5
      - LOGROTATE_SIZE=10M # Will rotate when log file exceeds 10 Megabytes.
      - LOGROTATE_COMPRESSION=nocompress
      - LOGROTATE_LOGFILE=/var/log/logrotate.log
      - LOGROTATE_STATUSFILE=/var/log/logrotate.status
    volumes:
      - ./logs:/var/log
    restart: unless-stopped

{% for application in pinanas.applications %}
  {% filter indent(width=2, first=True) %}
    {% include "docker-compose." + application + ".yaml.j2" +%}
  {% endfilter %}
{% endfor %}
