---
##
# This is PiNanas configuration file: settings.yml.
#
# Once every mandatory value has been set, you can call PiNanas'
# configure.sh script from the directory directly containing this
# file. See README.md for more information.
#

pinanas:
  # Registered domain name. Type: string. Example: "home.example.com".
  domain:

  # Port numbers
  ports:
    # HTTP port. Type: integer. Default: 80.
    # Exemple: 8080
    http:

    # HTTPS port. Type: integer. Default: 443.
    # Exemple: 8443
    https:

  # Master password to encrypt/derive all PiNanas secrets. Type: string.
  # Example: "Randomly-generated-complex-string-with-mixed-case-digits-and-special-characters".
  master_secret:

  # Locale timezone. Type: string. Example: "Europe/Paris".
  # Use a TZ database name, see <https://en.wikipedia.org/wiki/List_of_tz_database_time_zones>.
  timezone:

  # Users. Type: List of users.
  # User: { login: string, password: string, email: string, fullname: string }. Exemple:
  # - login: johndoe
  #   password: "s3cr3t"
  #   email: john@doe.com
  #   fullname: "John D. Doe"
  users:

  # List of services external to PiNanas to serve through it. Type: list of services.
  # Service: { name: string, url: string }. Example:
  # - name: "myservice"'
  #   url: "https://192.168.0.2:1234"
  services:

  acme:
    # Use Let's Encrypt stagging servers. Type: boolean. Optional, default: false. Example: true.
    #stagging:

  network:
    # MAC address of PiNana's host network card. Type: string. Default: auto discovery. Example: "01:02:03:04:05:06".
    #hmac:
    # Desired IP address of PiNanas's host. Type: string. Default: auto discovery. Example "192.168.0.1".
    #ip:

    dhcp:
      # Base IP for the network. Type: string. Default: auto discovery. Example: "192.168.0.0".
      #base:

      # Network subnet mask. Type: string. Default: auto discovery. Example: "255.255.255.0".
      #subnet:

      # Network gateway. Type: string. Default: auto discovery. Example: "192.168.0.254".
      #gateway:

      range:
        # First (included) IP of clients inside the network. Type: string. Default: auto discovery. Example: "192.168.0.16".
        #start:

        # Last (included) IP of clients inside the network. Type: string. Default: auto discovery. Example: "192.168.0.64".
        #end:

      # Fixed-address leases. Type: list of leases. Optional, default: [].
      # Lease: { name: string, hmac: string, ip: string }. Example:
      #  - name: "DeviceName"
      #    hmac: "01:23:45:67:89:ab"
      #    ip: "192.168.0.42"
      fixed_address_leases:

    dns:
      # Upstream DNS servers. Type: list of strings. Default: auto discovery. Example:
      # - 1.1.1.1
      # - 1.0.0.1
      #upstreams:

      # PiNanas DNS provider.
      # See traefik documentation for your provider at <https://doc.traefik.io/traefik/https/acme/#providers>.
      provider:
        # Provider's name. Stype: string. Example: "ovh".
        name:

        # Email address used for registration. Type: string. Example: "johndoe@example.com".
        email:

        # API variables. Type: list of variables.
        # Variable: { name: string, value: string }. Example:
        # - name: MY_PROVIDER_API_KEY
        #   value: "super_secret_api_secret"
        # - name: MY_PROVIDER_ENDPOINT
        #   value: my-provider-narnia
        api:

    # Send email; consult the documentation for your email provider.
    # eg. for gmail: <https://support.google.com/accounts/answer/185833>.
    smtp:
      # Server hostname. Type: string. Example: "smtp.gmail.com".
      host:

      # Server port number. Type: integer. Example: 587.
      port:

      # Email address or username. Type: string. Example: "johndoe@gmail.com".
      username:

      # Password. Type: string. Example: "s3cr3t".
      password:

      # Send emails as. Type: string. Example: "contact@{{ pinanas.domain }}".
      sender:

# === SELECT YOUR APPS === #
#
# PiNANAS includes following apps by default:
# - DHCPD
# - Traefik
# - Fail2ban
# - Authelia
#
# Optional applications can also be activated according to your needs. For a brief description of theses apps, go read the chapter "APPS DESCRIPTION" at the end of this file.
# To activate one, please note "YES" in front of the desired application.
# (by default, optionnal apps are not activated)
# Example:
# Adguardhome: YES
#
applications:
  Adguardhome:
  Heimdall:
  Jellyfin:
  Netdata:
  Nextcloud:

#
# === APPS DESCRIPTION === #
  #
  ## === DHCPD ===
  # DHCP Daemon: answer to dhcp requests to assign IPs to clients and set their primary DNS server.
  # This is necessary for adGuardHome to work with zero configuration on clients.
  

  ## === TRAEFIK ===
  #
  # Reverse proxy (HTTP, TCP, UDP): route requests to services hosted or not on the same host.
  # This is useful to add SSO (authelia), HTTPS (let's encrypt), and protect services not suited to face the outside.

  ## === FAIL2BAN ===
  #
  # Fail2ban ban hosts that cause multiple authentication errors.


  ## === AUTHELIA ===
  #
  # Single Sign On: handle authentification to users on the whole network.


  #
  ## === AD GUARD HOME ===
  #
  # AdGuard Home is a network-wide software for blocking ads and tracking. After you set it up, it'll cover ALL your home devices, and you don't need any client-side software for that


  ## === HEIMDALL ===
  #
  Heimdall Application Dashboard is a dashboard for all your web applications.


  ## === JELLYFIN ===
  #
  # Jellyfin is a Free Software Media System that puts you in control of managing and streaming your media.
  # It is an alternative to the proprietary Emby and Plex, to provide media from a dedicated server to end-user devices via multiple apps.  


  ## === NETDATA ===
  #
  # Netdata is a tool designed to collect real-time metrics, such as CPU usage, disk activity, bandwidth usage, website visits, etc.


  ## === NEXTCLOUD ===
  #
  # Nextcloud gives you access to all your files wherever you are.
  # This configuration uses MariaDB as database

##