---
version: "3"
networks:
  default:

services:
  #
  ## === DHCPD ===
  # DHCP Daemon: answer to dhcp requests to assign IPs to
  # clients and set their primary DNS server. This is necessary
  # for adGuardHome to work with zero configuration on clients.
  ##
  dhcpd:
    image: {{ 'prehley/rpi-dhcpd' if ('arm' in ansible_architecture) else 'networkboot/dhcpd:1.1.0' }}
    container_name: dhcpd
    volumes:
      - ./dhcpd/data:/data
      - ./dhcpd/cgroup:/sys/fs/cgroup
    hostname: dhcpd
    network_mode: host
    environment:
      - TZ={{ PINANAS_TZ }}
    restart: unless-stopped

  #
  ## === TRAEFIK ===
  # Reverse proxy (HTTP, TCP, UDP): route requests to
  # services hosted or not on the same host. This is
  # useful to add SSO (authelia), HTTPS (let's encrypt),
  # and protect services not suited to face the outside.
  ##
  traefik:
    image: traefik:v2.4
    container_name: traefik
    depends_on:
      - dhcpd
    ports:
      - 80:80
      - 443:443
      - 53:53/udp
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik/acme.json:/acme.json
      - ./traefik/config.yml:/config.yml
      - ./traefik/traefik.yml:/traefik.yml
    hostname: traefik
    networks:
      default:
        aliases:
          - traefik
          - traefik-dashboard
    environment:
      - TZ={{ PINANAS_TZ }}
{% for var in PINANAS_DNS_PROVIDER_VARS %}
      - {{ var.name }}={{ var.value }}
{% endfor %}
    labels:
      - "traefik.enable=true"
      - "traefik.http.middlewares.sslheader.headers.customrequestheaders.X-Forwarded-Proto=https"
      - "traefik.http.middlewares.traefik-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.traefik-secure.entrypoints=https"
      - "traefik.http.routers.traefik-secure.rule=Host(`traefik-dashboard.{{ PINANAS_DOMAIN }}`)"
      - "traefik.http.routers.traefik-secure.service=api@internal"
      - "traefik.http.routers.traefik-secure.tls=true"
      - "traefik.http.routers.traefik-secure.tls.certresolver=myresolver"
      - "traefik.http.routers.traefik-secure.tls.domains[0].main={{ PINANAS_DOMAIN }}"
      - "traefik.http.routers.traefik-secure.tls.domains[0].sans=*.{{ PINANAS_DOMAIN }}"
      - "traefik.http.routers.traefik.entrypoints=http"
      - "traefik.http.routers.traefik.middlewares=traefik-https-redirect"
      - "traefik.http.routers.traefik.rule=Host(`traefik-dashboard.{{ PINANAS_DOMAIN }}`)"
    restart: unless-stopped

  #
  ## === AUTHELIA ===
  # Single Sign On: handle authentification to users
  # on the whole network.
  ##
  authelia:
    image: authelia/authelia:4
    container_name: authelia
    depends_on:
      - traefik
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./authelia/config:/config
    hostname: authelia
    networks:
      default:
        aliases:
          - authelia
          - auth
    environment:
      - TZ={{ PINANAS_TZ }}
      - PUID={{ PUID }}
      - GUID={{ GUID }}
    labels:
      - "traefik.enable=true"
      - "traefik.http.middlewares.authelia.forwardauth.address=http://authelia:9091/api/verify?rd=https://auth.{{ PINANAS_DOMAIN }}"
      - "traefik.http.middlewares.authelia.forwardauth.authResponseHeaders=Remote-User,Remote-Groups,Remote-Name,Remote-Email"
      - "traefik.http.middlewares.authelia.forwardauth.trustForwardHeader=true"
      - "traefik.http.routers.authelia.entrypoints=https"
      - "traefik.http.routers.authelia.rule=Host(`auth.{{ PINANAS_DOMAIN }}`)"
      - "traefik.http.routers.authelia.tls=true"
    restart: unless-stopped
