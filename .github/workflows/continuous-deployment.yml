name: Continuous Deployment

on:
  push:
    branches:
      - develop
      - feature/continuous-deployment


jobs:
  undeploy:
    name: Undeploy
    runs-on: ubuntu-latest
    environment: uat
    steps:
      - name: Adding Known Hosts
        run: mkdir -p ~/.ssh && ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts
      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: unnecessary

      - name: Clean workspace
        run: ssh -p 8022 -i TODO continuous-deployment@${{ secrets.SSH_HOST }} -C "rm -rf ~/pinanas" # TODO: add to known_hosts

      - name: Stop previous PiNanas
        run: ssh -p 8022 -i TODO continuous-deployment@${{ secrets.SSH_HOST }} -C "[[ -d ~/dist ]] && cd dist && docker-compose down"

      - name: Remove docker containers, volumes, networks and images
        run: |
          ssh -p 8022 -i TODO continuous-deployment@${{ secrets.SSH_HOST }} -C "docker container prune --force"
          ssh -p 8022 -i TODO continuous-deployment@${{ secrets.SSH_HOST }} -C "docker volume prune --force"
          ssh -p 8022 -i TODO continuous-deployment@${{ secrets.SSH_HOST }} -C "docker network prune --force"
          ssh -p 8022 -i TODO continuous-deployment@${{ secrets.SSH_HOST }} -C "docker image prune --force --all"

      - name: Remove installation directory
        run: ssh -p 8022 -i TODO continuous-deployment@${{ secrets.SSH_HOST }} -C "rm -rf ~/dist" # TODO: add sudo rule for root-owned files?

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: uat
    needs: undeploy
    steps:
      - name: Adding Known Hosts
        run: ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts
      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: unnecessary

      - name: Clone
        uses: actions/checkout@v2

      - name: Recreate directories
        run: ssh -p 8022 -i TODO continuous-deployment@${{ secrets.SSH_HOST }} -C "mkdir -p ~/pinanas ~/dist"

      - name: Deploy to PiNanas UAT"
        run: scp -P 8022 -i TODO -r * continuous-deployment@${{ secrets.SSH_HOST }}:~/pinanas/.

  configure:
    name: Configure
    runs-on: ubuntu-latest
    environment: uat
    needs: deploy
    steps:
      - name: Adding Known Hosts
        run: ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts
      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: unnecessary

      - name: Prepare settings from secrets
        env:
          settings_pinanas_master_secret: "${{ secrets.settings_pinanas_master_secret }}"
          settings_pinanas_johndoe_password: "${{ secrets.settings_pinanas_johndoe_password }}"
          settings_pinanas_network_dns_provider_api: "${{ secrets.settings_pinanas_network_dns_provider_api }}"
          settings_pinanas_network_dns_provider_email: "${{ secrets.settings_pinanas_network_dns_provider_email }}"
          settings_pinanas_network_dns_provider_name: "${{ secrets.settings_pinanas_network_dns_provider_name }}"
          settings_pinanas_network_smtp_host: "${{ secrets.settings_pinanas_network_smtp_host }}"
          settings_pinanas_network_smtp_password: "${{ secrets.settings_pinanas_network_smtp_password }}"
          settings_pinanas_network_smtp_port: "${{ secrets.settings_pinanas_network_smtp_port }}"
          settings_pinanas_network_smtp_sender: "${{ secrets.settings_pinanas_network_smtp_sender }}"
          settings_pinanas_network_smtp_username: "${{ secrets.settings_pinanas_network_smtp_username }}"
        run: |
          env | grep ^settings_pinanas_ | ssh -p 8022 -i TODO continuous-deployment@${{ secrets.SSH_HOST }} -C "cat >~/.ssh/environment"
          ssh -p 8022 -i github continuous-deployment@${{ secrets.SSH_HOST }} -C "envsubst <~/pinanas/test/settings-cd.yml >~/dist/settings.yml"

      - name: Configure
        run: ssh -p 8022 -i github continuous-deployment@${{ secrets.SSH_HOST }} -C "cd ~/dist && ~/pinanas/src/configure.sh"

  start:
    name: Start
    runs-on: ubuntu-latest
    environment: uat
    needs: configure
    steps:
      - name: Start
        run: ssh -p 8022 -i github continuous-deployment@${{ secrets.SSH_HOST }} -C "cd ~/dist && docker-compose up -d"

      - name: Distclean
        run: ssh -p 8022 -i github continuous-deployment@${{ secrets.SSH_HOST }} -C "cd ~/dist && ./distclean.sh"
